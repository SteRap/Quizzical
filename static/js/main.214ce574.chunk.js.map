{"version":3,"sources":["Question.js","AnswersButtons.js","Answer.js","Main.js","Button.js","logo_app.png","App.js","reportWebVitals.js","index.js"],"names":["Question","props","className","id","Base64","decode","question","AnswersButtons","styles","backgroundColor","checked","isHeld","isWrong","border","boxShadow","style","onClick","handleChange","answer","Answer","answersArray","React","useState","setAnswer","useEffect","data","array","randomIndex","currentIndex","length","Math","floor","random","shuffle","push","answersButtons","map","option","Main","pairQuestionsAnswers","obj","index","Button","allSelected","count","i","j","color","cursor","buttonOn","answers","disabled","App","newGame","setNewGame","setData","setButtonOn","loadedGames","setLoadedGames","rightAnswers","setRightAnswers","fetch","then","res","json","results","updatedAnswer","currentGroup","checkedData","currentAnswer","filter","isTrue","checkRightAnswers","prevState","game","games","src","logo","alt","newArray","nanoid","incorrect_answers","correct_answer","generateAPI","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.214ce574.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Main.css\";\nimport { Base64 } from \"js-base64\";\n\nfunction Question(props) {\n  return (\n    <div>\n      <h2 className=\"main-question\" id={props.id}>\n        {Base64.decode(props.question)}\n      </h2>\n    </div>\n  );\n}\n\nexport default Question;\n","import React from \"react\";\nimport { Base64 } from \"js-base64\";\n\nfunction AnswersButtons(props) {\n  const styles = {\n    backgroundColor:\n      (props.checked && !props.isHeld && \"#D1D6D8\") ||\n      (props.checked && \"rgba(87, 255, 144, 0.8)\") ||\n      (props.isWrong && \"rgba(255, 113, 87, 0.6)\") ||\n      (props.isHeld && \"rgba(93, 215, 255, 0.6)\"),\n    border:\n      (props.checked && !props.isHeld && \"1px solid #00FF56\") ||\n      (props.checked && \"1px solid #00FF56\") ||\n      (props.isWrong && \"1px solid #FF2800\") ||\n      (props.isHeld ? \"1px solid transparent\" : \"1px solid #09C2FF\"),\n    boxShadow: props.isHeld ? \"none\" : \"0px 2px 2px rgba(0, 0, 0, 0.2)\",\n  };\n\n  return (\n    <button\n      className=\"main-button\"\n      style={styles}\n      onClick={() => props.handleChange(props.id)}\n    >\n      {Base64.decode(props.answer)}\n    </button>\n  );\n}\n\nexport default AnswersButtons;\n","import React from \"react\";\nimport AnswersButtons from \"./AnswersButtons\";\n\nfunction Answer(props) {\n  const answersArray = [];\n  const [answer, setAnswer] = React.useState(answersArray);\n\n  React.useEffect(() => {\n    setAnswer(props.data);\n  }, [props.data]);\n\n  React.useEffect(() => {\n    shuffle(props.data);\n    createAnswersArray();\n  }, []);\n\n  function shuffle(array) {\n    let currentIndex = array.length,\n      randomIndex;\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n    return array;\n  }\n\n  function createAnswersArray() {\n    answersArray.push(\n      props.data[0],\n      props.data[1],\n      props.data[2],\n      props.data[3]\n    );\n    return answersArray;\n  }\n\n  const answersButtons = answer.map((option) => (\n    <AnswersButtons\n      answer={option.answer}\n      key={option.id}\n      isHeld={option.isHeld}\n      id={option.id}\n      checked={option.checked}\n      handleChange={props.handleChange}\n      isWrong={option.isWrong}\n    />\n  ));\n\n  return <div className=\"main-answers\">{answersButtons}</div>;\n}\n\nexport default Answer;\n","import React from \"react\";\nimport Question from \"./Question\";\nimport Answer from \"./Answer\";\nimport \"./Main.css\";\n\nfunction Main(props) {\n  const pairQuestionsAnswers = props.data.map((obj, index) => (\n    <div className=\"main\" key={index}>\n      <Question\n        question={obj.question.question}\n        key={obj.question.id}\n        id={obj.question.id}\n      />\n      <Answer\n        handleChange={props.handleChange}\n        data={obj.answer}\n        // right={obj.answer[3]}\n      />\n      <hr />\n    </div>\n  ));\n\n  // const pairQuestionsAnswers = (componentWillMount = () => {\n  //   props.data.map((obj, index) => (\n  //     <div className=\"main\" key={index}>\n  //       <Question\n  //         question={obj.question.question}\n  //         key={obj.question.id}\n  //         id={obj.question.id}\n  //       />\n  //       <Answer data={obj.answer} right={obj.answer[3]} />\n  //       <hr />\n  //     </div>\n  //   ));\n  // });\n\n  return <div>{pairQuestionsAnswers}</div>;\n}\n\nexport default Main;\n","import React from \"react\";\n\nfunction Button(props) {\n  React.useEffect(() => {\n    allSelected();\n  });\n\n  function allSelected() {\n    let count = 0;\n    for (let i = 0; i < props.data.length; i++) {\n      for (let j = 0; j < props.data[i].answer.length; j++) {\n        if (props.data[i].answer[j].isHeld) {\n          count++;\n        }\n      }\n      if (count === 5) {\n        return true;\n      }\n    }\n  }\n\n  const styles = {\n    backgroundColor: !allSelected() ? \"#A6A8B2\" : \"#6c86ff\",\n    color: !allSelected() ? \"black\" : \"white\",\n    border: !allSelected() ? \"1px solid #92949F\" : \"1px solid #1d45ff\",\n    cursor: !allSelected() ? \"not-allowed\" : \"pointer\",\n  };\n\n  return (\n    <div className=\"button-component\">\n      {props.buttonOn && (\n        <h3 className=\"button-result\">\n          You scored {props.answers}/5 right answers!\n        </h3>\n      )}\n      <button\n        className=\"button-button\"\n        onClick={props.handleChange}\n        data={props.data}\n        disabled={!allSelected() ? true : false}\n        style={styles}\n      >\n        {!props.buttonOn ? \"Check Answers\" : \"Start a New Game\"}\n      </button>\n    </div>\n  );\n}\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/logo_app.4fd051a0.png\";","import React from \"react\";\nimport Main from \"./Main\";\nimport Button from \"./Button\";\nimport logo from \"./logo_app.png\";\nimport \"./App.css\";\nimport { nanoid } from \"nanoid\";\n\nfunction App() {\n  const [newGame, setNewGame] = React.useState(false);\n  const [data, setData] = React.useState([]);\n  const [buttonOn, setButtonOn] = React.useState(false);\n  const [loadedGames, setLoadedGames] = React.useState(0);\n  const [rightAnswers, setRightAnswers] = React.useState(0);\n\n  function start() {\n    setNewGame(() => true);\n    setData(generateAPI());\n  }\n\n  function generateAPI() {\n    const newArray = [];\n    for (let i = 0; i < data.length; i++) {\n      newArray.push({\n        question: {\n          question: data[i].question,\n          id: nanoid(),\n        },\n        answer: [\n          {\n            answer: data[i].incorrect_answers[0],\n            id: nanoid(),\n            isHeld: false,\n            isTrue: false,\n            isWrong: false,\n            checked: false,\n          },\n          {\n            answer: data[i].incorrect_answers[1],\n            id: nanoid(),\n            isHeld: false,\n            isTrue: false,\n            isWrong: false,\n            checked: false,\n          },\n          {\n            answer: data[i].incorrect_answers[2],\n            id: nanoid(),\n            isHeld: false,\n            isTrue: false,\n            isWrong: false,\n            checked: false,\n          },\n          {\n            answer: data[i].correct_answer,\n            id: nanoid(),\n            isHeld: false,\n            isTrue: true,\n            isWrong: false,\n            checked: false,\n          },\n        ],\n      });\n    }\n    return newArray;\n  }\n\n  function changeHeld(id) {\n    if (buttonOn === false) {\n      setData((data) => {\n        const updatedAnswer = [];\n        for (let i = 0; i < data.length; i++) {\n          const currentGroup = data[i].answer;\n          const answer = [];\n          const checkedData = {\n            question: data[i].question,\n            answer: answer,\n          };\n          for (let j = 0; j < currentGroup.length; j++) {\n            const currentAnswer = currentGroup[j];\n            if (currentAnswer.id === id) {\n              answer.push({\n                ...currentAnswer,\n                isHeld: !currentAnswer.isHeld,\n              });\n            } else if (\n              currentAnswer.id !== id &&\n              currentGroup.filter((answers) => answers.id === id).length > 0\n            ) {\n              answer.push({ ...currentAnswer, isHeld: false });\n            } else {\n              answer.push(currentAnswer);\n            }\n          }\n          updatedAnswer.push(checkedData);\n        }\n        return updatedAnswer;\n      });\n    }\n  }\n\n  //! this one gives a correct updated data array\n  // function handleChange() {\n  //   let updatedAnswer = [];\n  //   for (let i = 0; i < data.length; i++) {\n  //     const answers = [];\n  //     const checkedData = { question: data[i].question, answer: answers };\n  //     for (let j = 0; j < data[i].answer.length; j++) {\n  //       if (data[i].answer[j].isTrue) {\n  //         answers.push({\n  //           ...data[i].answer[j],\n  //           checked: !data[i].answer[j].checked,\n  //         });\n  //       } else {\n  //         answers.push(data[i].answer[j]);\n  //       }\n  //     }\n  //     updatedAnswer.push(checkedData);\n  //   }\n  //   console.log(\"updated\", updatedAnswer);\n  // }\n\n  function handleChange() {\n    checkRightAnswers();\n    setButtonOn((prevState) => !prevState);\n    if (buttonOn === false) {\n      setData((data) => {\n        let updatedAnswer = [];\n        for (let i = 0; i < data.length; i++) {\n          const answers = [];\n          const checkedData = { question: data[i].question, answer: answers };\n          for (let j = 0; j < data[i].answer.length; j++) {\n            if (data[i].answer[j].isTrue) {\n              answers.push({\n                ...data[i].answer[j],\n                checked: !data[i].answer[j].checked,\n              });\n            } else {\n              if (data[i].answer[j].isHeld) {\n                answers.push({\n                  ...data[i].answer[j],\n                  isWrong: true,\n                });\n              } else {\n                answers.push(data[i].answer[j]);\n              }\n            }\n          }\n          updatedAnswer.push(checkedData);\n        }\n        return updatedAnswer;\n      });\n    } else if (buttonOn) {\n      setNewGame((game) => !game);\n      setLoadedGames((games) => (games += 1));\n      setRightAnswers(0);\n    }\n  }\n\n  function checkRightAnswers() {\n    for (let i = 0; i < data.length; i++) {\n      for (let j = 0; j < data[i].answer.length; j++) {\n        if (data[i].answer[j].isTrue && data[i].answer[j].isHeld) {\n          setRightAnswers((answers) => (answers += 1));\n        }\n      }\n    }\n  }\n\n  React.useEffect(() => {\n    fetch(\n      \"https://opentdb.com/api.php?amount=5&category=9&difficulty=medium&type=multiple&encode=base64\"\n    )\n      .then((res) => res.json())\n      .then((data) => setData(data.results));\n  }, [loadedGames]);\n\n  // console.log(\"dataact\", data);\n\n  return newGame ? (\n    <div className=\"app\">\n      <Main data={data} handleChange={changeHeld} />\n      <Button\n        handleChange={handleChange}\n        data={data}\n        buttonOn={buttonOn}\n        answers={rightAnswers}\n      />\n    </div>\n  ) : (\n    <div className=\"start\">\n      <header className=\"start-header\">\n        <img src={logo} className=\"start-logo\" alt=\"logo\" />\n        <button\n          onClick={start}\n          className=\"start-button\"\n          href=\"https://reactjs.org\"\n        >\n          Start quiz\n        </button>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />,\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}